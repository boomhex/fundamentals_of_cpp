-  How the compiler interprets this statement is as follows:
If first is not equal to test1 then nothing happens
if first is equal to test and second is equal test2 
then the value is set to 5
if first is equal to test and second is not equal test2 
then the value is set to 6

- 
if (first == test1) 
    if (second == test2) 
        value = 5; 
    else 
        value = 6;

- by adding brackets, the interpertation can be changed. 
if (first == test1)
{
    if (second == test2) 
        value = 5; 
}
else 
{
    value = 6;
}

- if first is not equal to test1 then value is 6
if first is equal to test and second is equal test2 
then the value is set to 5
if first is equal to test and second is not equal test2 
then nothing happens

- The problem is that itâ€™s not clear which if the else belongs to. 
The compiler will always attach the else to the closest if, 
but when you read the code it looks like it might belong to the outer if. 
That makes the code confusing and easy to misinterpret.

To fix this problem you should always use braces {} to show clearly which if 
the else is paired with. That way both the compiler 
and anyone reading the code see the same meaning.